package flat/aws/dynamodb

import flat/datastruct

import static flat/node/import/Import

class {
    native Object client
    native Object docClient

    public construct() {
        external {
            #{client} = new #{Global.clientDynamoDB}.DynamoDBClient({});
            #{docClient} = #{Global.libDynamoDB}.DynamoDBDocumentClient.from(#{client});
        }
    }

    public async get(String tableName, HashMap<String, String> key) -> HashMap<String, Object> {
        native var Object item

        external {
            const command = new #{Global.libDynamoDB}.GetCommand({
                TableName: #{tableName.chars.data},
                Key: #{key.toJsObject()},
            });

            const response = await #{docClient}.send(command);

            item = response.Item;

            if (!item) return #{null};
        }

        return HashMap.jsObjectToFlatHashMap(item)
    }

    public async put(String tableName, HashMap<String, String> item) -> Int {
        external {
            const command = new #{Global.libDynamoDB}.PutCommand({
                TableName: #{tableName.chars.data},
                Item: #{item.toJsObject()},
            });

            const response = await #{docClient}.send(command);

            return response.$metadata.httpStatusCode;
        }

        return -1
    }

    public static class Global {
        public static native Object clientDynamoDB
        public static native Object libDynamoDB

        async static {
            clientDynamoDB = import("@aws-sdk/client-dynamodb")
            libDynamoDB = import("@aws-sdk/lib-dynamodb")
        }
    }
}
